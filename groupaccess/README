# THE SETUP
The "Group access" plugins nested group search functionality requires Crowd - Confluence setup. Crowd is used for constructing, managing and providing user - group relations and Confluence is the base of the plugin.

o Environment used for developing the plugin
	- Atlassian Crowd
		"atlas-run-standalone --product crowd" version 2.7.1 loaded
		groups created: "confluence-administrators", "confluence-users", "atlassian-users", "atlassian-developers", "team-awesome"
		users created: "admin_crowd"
		user group relationship: 
			"admin_crowd" : "confluence-administrators", "confluence-users"
		group group relationship:
			"atlassian-users" :<nested child groups>: "atlassian-developers", "team-awesome"
		application: name "crowd_auth", url "http://localhost:4990/confluence/", password "admin"
		
	- Atlassian Confluence
		"atlas-run -DskipTests" on the plugin, version 5.4.4 loaded
		configured Crowd as the default User direcotry for Confluence (nested groups enabled) using "crowd_auth" in Crowd
		linked Crowd and Confluence applications
		spaces created: "Team awesome space", "Public tutorial space"
		space - group permissions:
			"Team awesome space" : "team-awesome"
			"Public tutorial space" : "atlassian-users"

o How to use/test the plugin
	- Set up the evironment as described above
	- Modify the src\main\resources\crowd.properties file to include the data used in CrowdClient. Add the application data from Crowd:
		application.name
		application.password
		crowd.base.url
	- Run crowd and confluence as described above
	
	OR
	
	- Set up the evironment as described above
	- Modify the src\main\resources\crowd.properties file to include the data used in CrowdClient. Add the application data from Crowd:
		application.name
		application.password
		crowd.base.url
	- "atlas-package" the plugin and install as JAR in Confluence